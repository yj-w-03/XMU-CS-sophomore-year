#include <msp430.h>

int main(void)
{
  WDTCTL = WDTPW + WDTHOLD;                 // Stop watchdog timer
  P1DIR |= BIT0;                             // P1.0 output, else input
  P1OUT |= BIT5;                            // P1.5 set, else reset
  P1REN |= BIT5;                            // P1.5 pullup
  P1IE |= BIT5;                             // P1.5 interrupt enabled
  P1IES |= BIT5;                            // P1.5 Hi/lo edge
  P1IFG &= ~BIT5;                           // P1.5 IFG cleared

  P1DIR |= BIT6;                             // P1.6 output, else input
  P1OUT |= 0x10;                            // P1.4 set, else reset
  P1REN |= 0x10;                            // P1.4 pullup
  P1IE |= 0x10;                             // P1.4 interrupt enabled
  P1IES |= 0x10;                            // P1.4 Hi/lo edge
  P1IFG &= ~0x10;                           // P1.4 IFG cleared

__bis_SR_register(LPM4_bits + GIE);       // Enter LPM4 w/interrupt
}

// Port 1 interrupt service routine
#if defined(__TI_COMPILER_VERSION__) || defined(__IAR_SYSTEMS_ICC__)
#pragma vector=PORT1_VECTOR
__interrupt void Port_1(void)
#elif defined(__GNUC__)
void __attribute__ ((interrupt(PORT1_VECTOR))) Port_1 (void)
#else
#error Compiler not supported!
#endif
{
  if(P1IFG&BIT5)P1OUT ^= BIT0;                            // P1.0 = toggle
  if(P1IFG&BIT4)P1OUT ^= BIT6;
  P1IFG &= ~BIT5;                           // P1.5 IFG cleared
  P1IFG &= ~0x10;                           // P1.4 IFG cleared

}
